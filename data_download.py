# -*- coding: utf-8 -*-
"""project2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sxfAJ3NIIkz3KSsEOG4Gm_10bm745K_P
"""

import requests
import pandas as pd
import datetime
import numpy as np
from IPython import display # for updating the cell dynamically

def make_request(endpoint, payload=None):
    """
    Make a request to a specific endpoint on the weather API
    passing headers and optional payload.
    
    Parameters:
        - endpoint: The endpoint of the API you want to 
                    make a GET request to.
        - payload: A dictionary of data to pass along 
                   with the request.
    
    Returns:
        Response object.
    """
    return requests.get(
        f'https://www.ncdc.noaa.gov/cdo-web/api/v2/{endpoint}',
        headers={
            'token': 'UnEKmlXMamzVGuKAlGHAyBGoqeBOPwir'
        },
        params=payload
    )

startdates = np.arange(2010,2019)

results = []


for i in range(len(startdates)):

    display.display(f'Gathering data for {str(startdates[i])}')
    
    response = make_request(
    'data', 
        {
        'datasetid' : 'GHCND', # Global Historical Climatology Network - Daily (GHCND) dataset
        'stationid' : 'GHCND:USC00457773', # Snoqualmie Falls, WA
#        'locationid': 'CITY:US530018', # Seattle, WA
        'datatypeid': 'TMAX', 
        'startdate' : datetime.date(startdates[i], 1, 1),
        'enddate' : datetime.date(startdates[i], 12, 31),
        'units' : 'metric',
        'limit' : 1000 # max allowed
        }
    )
    if response.ok:
        # we extend the list instead of appending to avoid getting a nested list
        results.extend(response.json()['results'])

df = pd.DataFrame(results)
df.head()

df

df.to_csv('seattle_1900-2008.csv', index=False)